<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/categories/ai/</link><description>Recent content in AI on Hackerman's Hacking Tutorials</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 03 Sep 2025 07:00:00 -0700</lastBuildDate><atom:link href="https://parsiya.net/categories/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>So You Wanna Use Your Own LLMs in GitHub Copilot Chat</title><link>https://parsiya.net/blog/litellm-ghc-aad/</link><pubDate>Wed, 03 Sep 2025 07:00:00 -0700</pubDate><guid>https://parsiya.net/blog/litellm-ghc-aad/</guid><description>&lt;p&gt;We want to use custom OpenAI compatible API LLMs with GitHub Copilot Chat in VS
Code without API keys. We will use LiteLLM as a proxy for authentication and use
the Azure AI model support in Chat as a hack.&lt;/p&gt;
&lt;!-- More --&gt;
&lt;h1 id="problem-statement"&gt;Problem Statement
&lt;a class="header-link" href="#problem-statement"&gt;&lt;svg class="fill-current o-60 hover-accent-color-light" height="22px" viewBox="0 0 24 24" width="22px" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="M0 0h24v24H0z" fill="none"/&gt;&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"/&gt;&lt;/svg&gt;&lt;/a&gt;
&lt;/h1&gt;&lt;p&gt;GitHub Copilot Chat in VS Code (moving forward, called &lt;code&gt;Chat&lt;/code&gt;&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt;) allows custom
LLM deployments, but only supports API keys and not AAD/Entra ID. API keys are
icky and &lt;a href="https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/microsoft/final/en-us/microsoft-brand/documents/secure-future-initiative-protect-identities-and-secrets.pdf" target="_blank" rel="noreferrer noopener"&gt;not cool anymore&lt;/a&gt;. Using this method I can:&lt;/p&gt;</description></item><item><title>How Burp AI Works</title><link>https://parsiya.net/blog/2025-08-15-how-burp-ai-works/</link><pubDate>Fri, 15 Aug 2025 00:10:43 -0700</pubDate><guid>https://parsiya.net/blog/2025-08-15-how-burp-ai-works/</guid><description>&lt;p&gt;This is a quick peek inside Burp AI. I'll show how to proxy its requests, what
actually happens when you trigger a feature. This knowledge allows us to
redirect Burp AI to your own AI instance. As far as I know, this is not publicly
documented.&lt;/p&gt;
&lt;p&gt;I covered a shorter version in my DEF CON 33 Bug Bounty Village talk
&lt;code&gt;The Year of the Bounty Desktop: Bugs from Binaries&lt;/code&gt;. See the
&lt;a href="https://github.com/parsiya/Presentations/blob/main/defcon-33-bugs-binaries/defcon-33-bugs-binaries-all-slides.pdf" target="_blank" rel="noreferrer noopener"&gt;extended slides (pages 14â€“22)&lt;/a&gt; (placeholder for video).&lt;/p&gt;</description></item></channel></rss>