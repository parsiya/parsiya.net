<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>winappdbg on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/categories/winappdbg/</link><description>Recent content in winappdbg on Hackerman's Hacking Tutorials</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Nov 2017 18:45:04 -0500</lastBuildDate><atom:link href="https://parsiya.net/categories/winappdbg/index.xml" rel="self" type="application/rss+xml"/><item><title>WinAppDbg - Part 4 - Bruteforcing FlareOn 2017 - Challenge 3</title><link>https://parsiya.net/blog/2017-11-15-winappdbg-part-4-bruteforcing-flareon-2017-challenge-3/</link><pubDate>Wed, 15 Nov 2017 18:45:04 -0500</pubDate><guid>https://parsiya.net/blog/2017-11-15-winappdbg-part-4-bruteforcing-flareon-2017-challenge-3/</guid><description>&lt;p>Previous parts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://parsiya.net/blog/2017-11-09-winappdbg-part-1-basics/" title="WinAppDbg - Part 1 - Basics">Part 1 - Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://parsiya.net/blog/2017-11-11-winappdbg-part-2-function-hooking-and-others/" title="WinAppDbg - Part 2 - Function Hooking and Others">Part 2 - Function Hooking and Others&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://parsiya.net/blog/2017-11-11-winappdbg-part-2-function-hooking-and-others/" title="WinAppDbg - Part 3 - Manipulating Function Calls">Part 3 - Manipulating Function Calls&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We have learned some good stuff. In this part I am going to talk about the original problem that led me to learning WinAppDbg. This is my writeup for challenge 3 &amp;quot;Greek to me&amp;quot; of &lt;a href="https://www.fireeye.com/blog/threat-research/2017/10/2017-flare-on-challenge-solutions.html" target="_blank" rel="noreferrer noopener">FlareOn 2017&lt;/a>. This is a bruteforce challenge and is rather easy but instead of bruteforcing it the conventional (and straightforward way), I will show how I traversed arbitrary Assembly blobs using WinAppDbg.&lt;/p>
&lt;p>I will (hopefully) mostly talk about solving the challenge and not a lot of recon or other places I was stuck at.&lt;/p>
&lt;p>Code is in my clone:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/parsiya/Parsia-Code/tree/master/winappdbg" title="WinAppDbg code in Parsia-Code" target="_blank" rel="noreferrer noopener">https://github.com/parsiya/Parsia-Code/tree/master/winappdbg&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WinAppDbg - Part 3 - Manipulating Function Calls</title><link>https://parsiya.net/blog/2017-11-15-winappdbg-part-3-manipulating-function-calls/</link><pubDate>Wed, 15 Nov 2017 00:30:25 -0500</pubDate><guid>https://parsiya.net/blog/2017-11-15-winappdbg-part-3-manipulating-function-calls/</guid><description>&lt;p>Previously on WinAppDbg-TV:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://parsiya.net/blog/2017-11-09-winappdbg-part-1-basics/" title="WinAppDbg - Part 1 - Basics">Part 1 - Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://parsiya.net/blog/2017-11-11-winappdbg-part-2-function-hooking-and-others/" title="WinAppDbg - Part 2 - Function Hooking and Others">Part 2 - Function Hooking and Others&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>As usual, code is in my clone on Github. Download that directory to your VM and follow along:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/parsiya/Parsia-Code/tree/master/winappdbg" title="WinAppDbg code in Parsia-Code" target="_blank" rel="noreferrer noopener">https://github.com/parsiya/Parsia-Code/tree/master/winappdbg&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In part two we learned how to hook functions by hooking IE and Firefox to see pre-TLS traffic. Just looking at function calls is fun but often not enough. We need to be able to modify function parameters and return values.&lt;/p>
&lt;p>In this part we will learn how to do that (and a few other things). We will start with something simple and then move on to more complex examples.&lt;/p></description></item><item><title>WinAppDbg - Part 2 - Function Hooking and Others</title><link>https://parsiya.net/blog/2017-11-11-winappdbg-part-2-function-hooking-and-others/</link><pubDate>Sat, 11 Nov 2017 12:04:48 -0500</pubDate><guid>https://parsiya.net/blog/2017-11-11-winappdbg-part-2-function-hooking-and-others/</guid><description>&lt;p>In &lt;a href="https://parsiya.net/blog/2017-11-09-winappdbg-part-1-basics/" title="WinAppDbg - Part 1 - Basics">part one&lt;/a> we talked about the basics of WinAppDbg. In this part we are going to learn a few new things:&lt;/p>
&lt;ul>
&lt;li>I wrote a &lt;a href="https://github.com/parsiya/WinAppUtil" title="WinAppDbg repository on Github" target="_blank" rel="noreferrer noopener">simple python module&lt;/a> to simplify my use of WinAppDbg. It will most likely be modified later, but I have included a version that works with the tutorials at:
&lt;ul>
&lt;li>&lt;a href="https://github.com/parsiya/Parsia-Code/tree/master/winappdbg" title="WinAppDbg code in Parsia-Code" target="_blank" rel="noreferrer noopener">https://github.com/parsiya/Parsia-Code/tree/master/winappdbg&lt;/a>&lt;/li>
&lt;li>We do not need to type the full filename anymore if the executable is in PATH. Note Run Line (&lt;code>win+r&lt;/code>) pulls stuff from more locations than PATH, so we cannot call &lt;code>chrome.exe&lt;/code>. I have written about it &lt;a href="https://parsiya.net/blog/2017-10-23-run-line-vs.-cmd-vs.-powershell/" title="Run Line vs. cmd vs. PowerShell">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>DLL enumeration&lt;/strong>: We're going to implement one of procmon's features.&lt;/li>
&lt;li>&lt;strong>Process/Thread tracing&lt;/strong>: Another procmon feature.&lt;/li>
&lt;li>&lt;strong>Function Hooking&lt;/strong>: It's very easy in WinAppDbg and we will learn how to do it a couple of different ways.
&lt;ul>
&lt;li>We will hook pre-TLS encryption data for Internet Explorer and Firefox to hack the Gibson.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Copy this directory &lt;a href="https://github.com/parsiya/Parsia-Code/tree/master/winappdbg" title="WinAppDbg code in Parsia-Code" target="_blank" rel="noreferrer noopener">https://github.com/parsiya/Parsia-Code/tree/master/winappdbg&lt;/a> to your VM and let's go.&lt;/p></description></item><item><title>WinAppDbg - Part 1 - Basics</title><link>https://parsiya.net/blog/2017-11-09-winappdbg-part-1-basics/</link><pubDate>Thu, 09 Nov 2017 19:22:24 -0500</pubDate><guid>https://parsiya.net/blog/2017-11-09-winappdbg-part-1-basics/</guid><description>&lt;p>&lt;a href="https://github.com/MarioVilas/winappdbg" title="WinAppDbg repository on Github" target="_blank" rel="noreferrer noopener">WinAppDbg&lt;/a> by &lt;a href="https://twitter.com/Mario_Vilas" title="Mario Vilas Twitter account" target="_blank" rel="noreferrer noopener">Mario Vilas&lt;/a> is perhaps one of the most underrated instrumentation frameworks for Windows. In this day and age where everyone write JavaScript code to hook functions (I am looking at you Frida), writing Python code feels great. Just kidding, Frida is pretty cool too.&lt;/p>
&lt;p>Going around the web searching for tutorials did not give me many results. &lt;a href="https://winappdbg.readthedocs.io/en/latest/" title="WinAppDbg documentation on readthedocs" target="_blank" rel="noreferrer noopener">The docs&lt;/a> are great, they are some of the most practical docs I have seen. But apart from that, I could not find much. There are some random code here and there where people have documented using it but there were no guides to get me started apart from the docs.&lt;/p>
&lt;p>Here's the result of my learning. I am sharing it to fill the gap that I encountered while getting started with the tool. We're going to learn as we go using real-world applications and will write code. We will start from the basics, expanding our code-base as we learn more.&lt;/p>
&lt;p>Code is in my clone at:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/parsiya/Parsia-Code/tree/master/winappdbg" title="WinAppDbg code in Parsia-Code" target="_blank" rel="noreferrer noopener">https://github.com/parsiya/Parsia-Code/tree/master/winappdbg&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>