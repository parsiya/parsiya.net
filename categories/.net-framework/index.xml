<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET Framework on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/categories/.net-framework/</link><description>Recent content in .NET Framework on Hackerman's Hacking Tutorials</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 07 Oct 2017 18:30:28 -0400</lastBuildDate><atom:link href="https://parsiya.net/categories/.net-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Thick Client Proxying - Part 7 - Proxying .NET Applications via Config File</title><link>https://parsiya.net/blog/2017-10-07-thick-client-proxying-part-7-proxying-.net-applications-via-config-file/</link><pubDate>Sat, 07 Oct 2017 18:30:28 -0400</pubDate><guid>https://parsiya.net/blog/2017-10-07-thick-client-proxying-part-7-proxying-.net-applications-via-config-file/</guid><description>&lt;p>.NET applications use a configuration file to read some settings. It's an XML
file named &lt;code>appName.exe.config&lt;/code>. We can pass a proxy address in this file.&lt;/p>
&lt;p>These apps usually use WinINET or IE proxy settings. Sometimes, they do not. We
can either use an application specific config file or use one for the entire
.NET framework for a machine.&lt;/p>
&lt;p>Look inside the decompiled code (or just grep the binary files) for references
to &lt;code>System.Configuration&lt;/code> &lt;a href="https://msdn.microsoft.com/en-us/library/system.configuration.configuration%28v=vs.110%29.aspx" target="_blank" rel="noreferrer noopener">MSDN-page&lt;/a>. Applications
use &lt;code>ConfigurationManager&lt;/code> and &lt;code>WebConfigurationManager&lt;/code> classes to access these
settings.&lt;/p>
&lt;!-- links --></description></item></channel></rss>