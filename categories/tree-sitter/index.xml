<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tree-Sitter on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/categories/tree-sitter/</link><description>Recent content in Tree-Sitter on Hackerman's Hacking Tutorials</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Mar 2024 16:35:30 -0700</lastBuildDate><atom:link href="https://parsiya.net/categories/tree-sitter/index.xml" rel="self" type="application/rss+xml"/><item><title>Knee Deep in tree-sitter Queries</title><link>https://parsiya.net/blog/knee-deep-tree-sitter-queries/</link><pubDate>Tue, 19 Mar 2024 16:35:30 -0700</pubDate><guid>https://parsiya.net/blog/knee-deep-tree-sitter-queries/</guid><description>&lt;p>&lt;a href="https://tree-sitter.github.io/tree-sitter/" target="_blank" rel="noreferrer noopener">tree-sitter&lt;/a> is a parser generator. You can use it to parse source code which
is the first step of static analysis. For example, GitHub uses it to highlight
code, code navigation, and also in CodeQL extractors.&lt;/p>
&lt;p>&lt;strong>TL;DR&lt;/strong>: Queries are great for capturing text from code. But to extract
anything moderately structured we need to traverse the syntax tree.&lt;/p>
&lt;p>And, yes, the title is based on Doom Episode 1 &lt;a href="https://doom.fandom.com/wiki/Knee-Deep_in_the_Dead" target="_blank" rel="noreferrer noopener">Knee Deep in the Dead&lt;/a>.
I love the title (and the game), because it let's me relive my edgy days.&lt;/p></description></item></channel></rss>