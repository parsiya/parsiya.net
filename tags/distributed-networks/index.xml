<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed Networks on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/tags/distributed-networks/</link><description>Recent content in Distributed Networks on Hackerman's Hacking Tutorials</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Feb 2018 20:43:14 -0500</lastBuildDate><atom:link href="https://parsiya.net/tags/distributed-networks/index.xml" rel="self" type="application/rss+xml"/><item><title>CAP Theorem and Credit Cards</title><link>https://parsiya.net/blog/2018-02-22-cap-theorem-and-credit-cards/</link><pubDate>Thu, 22 Feb 2018 20:43:14 -0500</pubDate><guid>https://parsiya.net/blog/2018-02-22-cap-theorem-and-credit-cards/</guid><description>&lt;p>CAP Theorem is another of those &lt;code>blockchain buzzwords&lt;/code>.&lt;/p>
&lt;p>CAP stands for:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Consistency&lt;/strong>: Every read should get up-to-date data.&lt;/li>
&lt;li>&lt;strong>Availability&lt;/strong>: Every request should get a response.&lt;/li>
&lt;li>&lt;strong>Partition Tolerance&lt;/strong>: If a section of the network is partitioned/cut-off (messages are dropped), the network should continue to work.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>CAP Theorem&lt;/strong>: A distributed network &lt;strong>can only pick two&lt;/strong>.&lt;/p></description></item><item><title>Byzantine Generals' Problem</title><link>https://parsiya.net/blog/2018-02-21-byzantine-generals-problem/</link><pubDate>Wed, 21 Feb 2018 15:58:41 -0500</pubDate><guid>https://parsiya.net/blog/2018-02-21-byzantine-generals-problem/</guid><description>&lt;p>In the previous blog post, I talked about &lt;a href="https://parsiya.net/blog/2018-02-18-byzantine-fault-tolerance-and-the-telephone-game/" title="Byzantine Fault Tolerance and the Telephone Game">Byzantine Fault Tolerance&lt;/a>. It was sort of a jump into the middle of everything. In this post I will take a step back and look at the history behind BFT. This is my short post about the &lt;strong>Byzantine Generals' Problem&lt;/strong>.&lt;/p></description></item><item><title>Byzantine Fault Tolerance and the Telephone Game</title><link>https://parsiya.net/blog/2018-02-18-byzantine-fault-tolerance-and-the-telephone-game/</link><pubDate>Sun, 18 Feb 2018 21:14:05 -0500</pubDate><guid>https://parsiya.net/blog/2018-02-18-byzantine-fault-tolerance-and-the-telephone-game/</guid><description>&lt;p>This distributed ledger thing &lt;em>clicked&lt;/em> when I realized &lt;strong>a blockchain is just a distributed network&lt;/strong>. Like any other model, blockchains attempt to solve a few problems and as a result introduce some challenges. &lt;strong>Byzantine Fault Tolerance&lt;/strong> or &lt;strong>BFT&lt;/strong> is one of those buzzwords that go around during nowadays. Blockchains have consensus models that claim to achieve BFT.&lt;/p>
&lt;p>Here are my notes on BFT and how it relates to blockchains. I do not claim these notes to be neither complete nor correct. I am still learning. This is not an academic paper. I am just writing down what worked for me in hopes of helping others. That said, if you have any feedback, you know where to find me.&lt;/p></description></item></channel></rss>