<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Io.Reader on Hackerman's Hacking Tutorials</title><link>https://parsiya.net/tags/io.reader/</link><description>Recent content in Io.Reader on Hackerman's Hacking Tutorials</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 19 Jan 2018 22:45:55 -0500</lastBuildDate><atom:link href="https://parsiya.net/tags/io.reader/index.xml" rel="self" type="application/rss+xml"/><item><title>Decoding Large Base64 Files with Go</title><link>https://parsiya.net/blog/2018-01-19-decoding-large-base64-files-with-go/</link><pubDate>Fri, 19 Jan 2018 22:45:55 -0500</pubDate><guid>https://parsiya.net/blog/2018-01-19-decoding-large-base64-files-with-go/</guid><description>&lt;p&gt;I am working on this challenge and it has a large base64 file. Each line has 2 characters and it has 150+ million lines.&lt;/p&gt;
&lt;p&gt;Luckily we can use the &lt;a href="https://golang.org/pkg/encoding/base64/#NewDecoder" target="_blank" rel="noreferrer noopener"&gt;Base64 stream decoder&lt;/a&gt;. It reads from an &lt;code&gt;io.Reader&lt;/code&gt; and returns one that can be copied into an &lt;code&gt;io.Writer&lt;/code&gt;. It also takes care of the new lines.&lt;/p&gt;
&lt;p&gt;Sample code is at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/parsiya/Go-Security/blob/master/base64-stream-decoder/b64-stream-decoder.go" target="_blank" rel="noreferrer noopener"&gt;https://github.com/parsiya/Go-Security/blob/master/base64-stream-decoder/b64-stream-decoder.go&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>